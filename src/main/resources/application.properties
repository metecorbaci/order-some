spring.application.name=OrderSome
server.port=3000
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/order_some_db
spring.datasource.username=root
spring.datasource.password=0000
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
## ddl-auto=none yaparak tablolarin olusturulmasini engelliyoruz.
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
## id siralamasina gore sorgu atmasini saglar
spring.jpa.properties.hibernate.column_ordering_strategy=legacy
spring.jpa.show-sql=true
springdoc.swagger-ui.path=/api
springdoc.api-docs.resolve-schema-properties=true
springdoc.api-docs.path=/api-docs
## Swagger api url lerini http Ã¼zerinden yonlendiriyor diye reverse proxy kullaniyoruz.
server.forward-headers-strategy=framework
## swagger icin taranacak controllerin konumunu tan?ml?yoruz
springdoc.packagesToScan=com.ordersome.backend.controller
## Default rest apileri kapatmak icin kullanilir. Sadece @RepositoryRestResource ile belirtilenler acilir.
spring.data.rest.detection-strategy=annotated
logging.level.org.springframework.mail=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
## database connection pool
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=3000